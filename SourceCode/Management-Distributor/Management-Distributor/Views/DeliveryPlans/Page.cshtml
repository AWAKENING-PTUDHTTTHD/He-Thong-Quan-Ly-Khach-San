@model Distributor.ViewModels.DeliveryPlansListViewModel
@{
    ViewBag.Title = "Page";
}

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@


<style>
    /*.ui-widget-overlay {
        z-index: 0;
    }*/

    /*.ui-dialog {
        z-index: 9999 !important;
    }*/

    .ui-widget-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
</style>

<!-- Page Header-->
<header style="margin-top: 0;" class="page-header">
    <div class="container-fluid">
        <h2 class="no-margin-bottom">Products</h2>
    </div>
</header>
<section style="padding: 10px 0;" class="tables">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header d-flex align-items-center">
                        <h3 class="h4"><a class="btn" style="background-color:#36d2a5;color:#fff;" onclick="PopupForm('@Url.Action("AddOrEdit","DeliveryPlans")')"><i class="fa fa-plus-circle">  Add New</i></a></h3>
                    </div>
                    <div class="card-body">
                        <table class="table table-hover text-center">
                            <thead>
                                <tr>
                                    <th>DeliveryDate</th>
                                    <th>Description</th>
                                    <th>Status</th>
                                    <th>OrderId</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var p in Model.DeliveryPlans)
                                {

                                    RenderPartialExtensions.RenderPartial(Html, "_DeliveryPlan", p);

                                }
                            </tbody>
                        </table>
                        <div class="btn-group pull-right">
                            @Html.PageLinks(Model.PagingInfo, x => Url.Action("Page", new { page = x }))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    @*<script>
            $(document).ready(function () {
                $('#datetimepicker').datepicker({
                    minDate: new Date()
                });
            });

        </script>*@

    <script src="~/Scripts/ProductAddition.js"></script>

    @*<script src="~/Scripts/jquery.datetimepicker.js"></script>*@
    <script>
        $(document).ready(function () {
            $('#DeliveryDate').datepicker({
                minDate: new Date(),
                @*defaultDate: '@Model.DeliveryDate',*@
            });
        });

    </script>
    <script>
        var Popup;

        /* Show add/edit Form */
        function PopupForm(url)
        {
            var formDiv = $('<div/>');
            $.get(url)
            .done(function (response) {
                formDiv.html(response)
                Popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,

                    title: 'Add/Update DeliveryPlan',
                    height: 800,
                    width: 700,
                    close: function()
                    {
                        Popup.dialog('destroy')
                            .remove();
                    }
                });
            });
        }
        /* End Show add/edit Form */

        /* Submit add/Edit Form*/
        function SubmitForm(form) {
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {

                var ajaxConfig = {
                    async: true,
                    type: "POST",
                    url: form.action,
                    data: new FormData(form),
                    success: function (data) {
                        if (data.success == true) {
                            Popup.dialog('close');
                            /*Refetch :))*/
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            });
                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "Error"
                            });
                        }
                    }
                }


                if ($(form).attr('enctype') == "mutilpart/form-data") {
                    ajaxConfig["contenType"] = false;
                    ajaxConfig["processData"] = false;
                }

                $.ajax(ajaxConfig);
            }
            return false;
        }
        /* End Submit add/Edit Form*/

        /* Remove record opt */

        function Delete(id) {
            if(confirm('Are you Sure to remove this product record ?'))
            {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Remove", "DeliveryPlans")/' + id,
                    success: function (data) {
                        if (data.success) {
                           /*Refetch :))*/

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            });

                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "Error"
                            });
                        }
                    }
                });
            }
        }

        /* End Remove record opt */


        //

    </script>
}


