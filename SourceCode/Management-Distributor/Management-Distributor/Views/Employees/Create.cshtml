@model Distributor.POCO.Employee

@{
    Layout = null;
}

@using (Html.BeginForm("Edit", "Employees", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

    <input class="btn btn-file" type="file" name="AvatarUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
    <div style="width:200px;height:180px;margin: 10px auto;" class="text-center">
        <img class="img-fluid rounded" src="@Url.Content(Model.AvatarUrl)" id="imagePreview" alt="Image Not Found" />
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpName, new { @class = "control-label" })

        @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.EmpName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpAddress, new { @class = "control-label" })

        @Html.EditorFor(model => model.EmpAddress, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.EmpAddress)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EncryptedPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.EncryptedPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EncryptedPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label" })

        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.PhoneNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label" })

        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.PhoneNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpEmail, new { @class = "control-label" })

        @Html.EditorFor(model => model.EmpEmail, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.EmpEmail)
    </div>
    <input type="submit" value="Submit" class="btn btn-primary" />
    <input type="reset" value="Reset" class="btn btn-warning" />
}

