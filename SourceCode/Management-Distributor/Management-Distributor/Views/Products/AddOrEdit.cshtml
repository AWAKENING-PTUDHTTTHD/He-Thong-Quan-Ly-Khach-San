@model Distributor.POCO.Product

@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Products", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ProductId)
    @Html.HiddenFor(model => model.ImageUrl)

    <input class="btn btn-file" type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
    <div style="width:200px;height:180px;margin: 10px auto;" class="text-center">
        <img class="img-fluid rounded" src="@Url.Content(Model.ImageUrl)" id="imagePreview" alt="Image Not Found" />
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label" })

        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, new { @class = "control-label" })

        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.ProductName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, new { @class = "control-label" })

        <div class="input-group">
            <span class="input-group-addon">$</span>
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @Html.ValidationMessageFor(model => model.Price)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AvailableQty, new { @class = "control-label" })

        <div class="input-group">
            <span class="input-group-addon">$</span>
            @Html.EditorFor(model => model.AvailableQty, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @Html.ValidationMessageFor(model => model.AvailableQty)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
        <div>
            <div class="input-group">
                @Html.TextAreaFor(model => model.Description, 2, 58, new { htmlAttributes = new { @class = "form-control", @id = "InputDescription" } })
            </div>
            @Html.ValidationMessageFor(model => model.Description)

        </div>


        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn btn-warning" />
    </div>
}

