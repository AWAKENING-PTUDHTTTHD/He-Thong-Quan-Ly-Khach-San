@model Distributor.ViewModels.ProductsListViewModel
@{
    ViewBag.Title = "Page";
}
<style>
    .product-Image {
        height: 100px;
        width: 100px;
    }
</style>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<!-- Page Header-->
<header style="margin-top: 0;" class="page-header">
    <div class="container-fluid">
        <h2 class="no-margin-bottom">Products</h2>
    </div>
</header>
<section style="padding: 10px 0;" class="tables">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header d-flex align-items-center">
                        <div class="col-md-4"><a class="btn" style="background-color:#36d2a5;color:#fff;" onclick="PopupForm('@Url.Action("AddOrEdit","Products")')"><i class="fa fa-plus-circle">  Add New</i></a></div>
                        <div class="col-md-8"><input class="form-control" type="text" name="name" value="Search" /></div>
                    </div>
                    <div class="card-body">
                        @if (Model.Products.Count() == 0)
                        {
                            <p>No Result Found!</p>
                        }

                        else
                        {
                            <table class="table table-hover text-center">
                                <thead>

                                    <tr>
                                        <th width="20%">#</th>
                                        <th width="25%">Product Name</th>
                                        <th width="15%">Category</th>
                                        <th width="15%">Price</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var p in Model.Products)
                        {

                                  //RenderPartialExtensions.RenderPartial(Html, "_Product", p);
                                <tr>
                                    <td><img class="product-Image" src="@Url.Content(p.ImageUrl)" alt="not found"></td>
                                    <td>@Html.DisplayFor(ModelItem => p.ProductName)</td>
                                    <td>@Html.DisplayFor(ModelItem => p.CategoryId)</td>
                                    <td>@Html.DisplayFor(ModelItem => p.Price)</td>

                                    <td>

                                        <a class='btn btn-success btn-sm' onclick=PopupForm('@Url.Action("AddOrEdit","Products")/@p.ProductId')><i class='fa fa-pencil-square-o' aria-hidden='true'></i></a>
                                        <a class='btn btn-danger btn-sm' onclick=Delete('@p.ProductId')><i class='fa fa-trash' aria-hidden='true'></i></a>
                                    </td>
                                </tr>


                            }
                                </tbody>
                            </table>
                            <div class="btn-group pull-right">
                                @Html.PageLinks(Model.PagingInfo, x => Url.Action("Page", new { page = x }))
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="~/Scripts/ProductAddition.js"></script>
    <script>
        var Popup;
        function PopupForm(url)
        {
            var formDiv = $('<div/>');
            $.get(url)
            .done(function (response) {
                formDiv.html(response)
                Popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,

                    title: 'Add/Update Category',
                    height: 600,
                    width: 500,
                    modal: true,
                    close: function()
                    {
                        Popup.dialog('destroy')
                            .remove();
                    }
                });
            });
        }
        /* End Show add/edit Form */

        /* Submit add/Edit Form*/
        function SubmitForm(form) {
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: $(form).serialize(),
                    success: function (data) {
                        if (data.success == true) {
                            Popup.dialog('close');
                            window.location.reload();
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className : "success"
                            });
                        }
                        else {
                            Popup.dialog('close');
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "Error"
                            });
                        }
                    },
                    error: function (err) {
                        Popup.dialog('close');
                        $.notify("Somthing went wrong!", {
                            globalPosition: "top center",
                            className: "Error"
                        });
                    }
                });
            }
            return false;
        }
        /* End Submit add/Edit Form*/

        /* Remove record opt */

        function Delete(id) {
            if(confirm('Are you Sure to remove this category record ?'))
            {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Remove", "Products")/' + id,
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            });

                        }
                        else {
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "Error"
                            });
                        }
                    }
                });
            }
        }

        /* End Remove record opt */
    </script>
}

